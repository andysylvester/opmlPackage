<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Sat, 03 Jul 2021 15:54:35 GMT -->
<opml version="2.0">
	<head>
		<title>nodeEditor: opmlPackage</title>
		<dateCreated>Mon, 28 Jun 2021 19:23:08 GMT</dateCreated>
		<dateModified>Sat, 03 Jul 2021 15:54:35 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 4, 28, 29, 31, 32, 36, 41, 43</expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>83</windowTop>
		<windowLeft>481</windowLeft>
		<windowBottom>1079</windowBottom>
		<windowRight>1556</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/opmlpackage/">
			<outline text="notes.opml" isComment="true" created="Mon, 28 Jun 2021 19:25:17 GMT">
				<outline text="7/1/21; 11:45:06 AM by DW" created="Thu, 01 Jul 2021 15:45:05 GMT">
					<outline text="opml.parse has to take a callback because xml2js.parse does." created="Thu, 01 Jul 2021 15:45:06 GMT"/>
					</outline>
				<outline text="6/28/21; 3:25:22 PM by DW" created="Mon, 28 Jun 2021 19:25:21 GMT">
					<outline text="this is where the toolkit for supporting instant outlines and other stuff will go" created="Mon, 28 Jun 2021 19:25:23 GMT"/>
					<outline text="may incorporate features from other packages" created="Mon, 28 Jun 2021 19:25:45 GMT"/>
					<outline text="the idea is to make it easy for Node devs to support OPML in an interoperable way" created="Mon, 28 Jun 2021 19:25:52 GMT"/>
					</outline>
				</outline>
			<outline text="package.json">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;opml&quot;,"/>
					<outline text="&quot;description&quot;: &quot;Node and browser-based code that helps developers support OPML in outliners, processors and renderers.&quot;," created="Fri, 02 Jul 2021 14:57:59 GMT"/>
					<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@scripting.com&gt;&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.4.4&quot;,"/>
					<outline text="&quot;license&quot;: &quot;MIT&quot;,"/>
					<outline text="&quot;repository&quot;: {">
						<outline text="&quot;type&quot;: &quot;git&quot;,"/>
						<outline text="&quot;url&quot;: &quot;https://github.com/scripting/opmlpackage.git&quot;"/>
						<outline text="},"/>
						</outline>
					<outline text="&quot;files&quot;: [">
						<outline text="&quot;opmlpackage.js&quot;"/>
						<outline text="],"/>
						</outline>
					<outline text="&quot;main&quot;: &quot;opmlpackage.js&quot;,"/>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;request&quot;: &quot;*&quot;,"/>
						<outline text="&quot;xml2js&quot;: &quot;*&quot;," created="Wed, 30 Jun 2021 13:10:12 GMT"/>
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;opmltojs&quot;: &quot;*&quot;" created="Mon, 08 Mar 2021 15:15:44 GMT"/>
						<outline text="} "/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="opmlpackage.js" created="Mon, 08 Mar 2021 15:16:10 GMT">
				<outline text="const myVersion = &quot;0.4.4&quot;, myProductName = &quot;opmlPackage&quot;; " created="Mon, 03 Feb 2014 03:21:03 GMT" pgfnum="36831"/>
				<outline text="" created="Wed, 30 Jun 2021 12:10:35 GMT"/>
				<outline text="exports.parse = parse; "/>
				<outline text="exports.stringify = stringify; "/>
				<outline text="" created="Wed, 30 Jun 2021 12:12:23 GMT"/>
				<outline text="const utils = require (&quot;daveutils&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const opmltojs = require (&quot;opmltojs&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const xml2js = require (&quot;xml2js&quot;);"/>
				<outline text="const opmlToJs = require (&quot;opmltojs&quot;);"/>
				<outline text="" created="Wed, 30 Jun 2021 12:10:35 GMT"/>
				<outline text="function isScalar (obj) {">
					<outline text="if (typeof (obj) == &quot;object&quot;) {">
						<outline text="return (false);"/>
						<outline text="}"/>
						</outline>
					<outline text="return (true);"/>
					<outline text="}"/>
					</outline>
				<outline text="function parse (opmltext, callback) { //returns a JavaScript object with all the info in the opmltext" created="Wed, 30 Jun 2021 12:10:36 GMT">
					<outline text="Changes" isComment="true">
						<outline text="1/18/21; 10:21:27 AM by DW">
							<outline text="I created an OPML format that added a &quot;subs&quot; attribute to each headline that had subs. This was an error, but was still valid OPML, but it caused this code to fail, because subs was the wrong type. It is always a mistake, if it's possible that your OPML will be converted to a JS object. So I protected against it here, and don't copy an attribute called subs if it's present. It's possible that this fix could cause problems too, btw. The code is in Old School, look for saveDayInOpml. "/>
							</outline>
						<outline text="4/18/20; 5:43:20 PM by DW">
							<outline text="Changed the callback to return the standard format, with an err first, and theOutline second. "/>
							<outline text="I didn't want to break all the apps that use this as it was configured, but in the future, use this entry point not the one without the error."/>
							</outline>
						</outline>
					<outline text="function addGenerator (theOpml) { //follow the example of RSS 2.0">
						<outline text="try {">
							<outline text="theOpml.head.generator = myProductName + &quot; v&quot; + myVersion;"/>
							<outline text="}"/>
							</outline>
						<outline text="catch (err) {">
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="function convert (sourcestruct, deststruct) {">
						<outline text="var atts = sourcestruct [&quot;$&quot;];"/>
						<outline text="if (atts !== undefined) {">
							<outline text="for (var x in atts) {">
								<outline text="if (x != &quot;subs&quot;) { //1/18/21 by DW">
									<outline text="deststruct [x] = atts [x];"/>
									<outline text="}"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="delete sourcestruct [&quot;$&quot;];"/>
							<outline text="}"/>
							</outline>
						<outline text="for (var x in sourcestruct) {">
							<outline text="var obj = sourcestruct [x];"/>
							<outline text="if (isScalar (obj)) {">
								<outline text="deststruct [x] = obj;"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="if (x == &quot;outline&quot;) {">
									<outline text="if (deststruct.subs === undefined) {">
										<outline text="deststruct.subs = new Array ();"/>
										<outline text="}"/>
										</outline>
									<outline text="if (Array.isArray (obj)) {">
										<outline text="for (var i = 0; i &lt; obj.length; i++) {">
											<outline text="var newobj = new Object ();"/>
											<outline text="convert (obj [i], newobj);"/>
											<outline text="deststruct.subs.push (newobj);"/>
											<outline text="}"/>
											</outline>
										<outline text="}"/>
										</outline>
									<outline text="else {">
										<outline text="var newobj = new Object ();"/>
										<outline text="convert (obj, newobj);"/>
										<outline text="deststruct.subs.push (newobj);"/>
										<outline text="}"/>
										</outline>
									<outline text="}"/>
									</outline>
								<outline text="else {">
									<outline text="deststruct [x] = new Object ();"/>
									<outline text="convert (obj, deststruct [x]);"/>
									<outline text="}"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="var options = {">
						<outline text="explicitArray: false"/>
						<outline text="};"/>
						</outline>
					<outline text="xml2js.parseString (opmltext, options, function (err, jstruct) {">
						<outline text="if (err) { ">
							<outline text="callback (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="var theOutline = {">
								<outline text="opml: new Object ()"/>
								<outline text="}"/>
								</outline>
							<outline text="convert (jstruct.opml, theOutline.opml);"/>
							<outline text="addGenerator (theOutline.opml); //8/6/17 by DW"/>
							<outline text="if (isScalar (theOutline.opml.head)) { //8/6/17 by DW">
								<outline text="theOutline.opml.head = new Object ();"/>
								<outline text="}"/>
								</outline>
							<outline text="if (isScalar (theOutline.opml.body)) { //8/6/17 by DW">
								<outline text="theOutline.opml.body = new Object ();"/>
								<outline text="}"/>
								</outline>
							<outline text="callback (undefined, theOutline);"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="xml2js.parseString (opmltext, options, function (err, jstruct) {" isComment="true">
						<outline text="if (err) { //4/18/20 by DW">
							<outline text="callback (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="var theOutline = {">
								<outline text="opml: new Object ()"/>
								<outline text="}"/>
								</outline>
							<outline text="convert (jstruct.opml, theOutline.opml);"/>
							<outline text="addGenerator (theOutline.opml); //8/6/17 by DW"/>
							<outline text="if (isScalar (theOutline.opml.head)) { //8/6/17 by DW">
								<outline text="theOutline.opml.head = new Object ();"/>
								<outline text="}"/>
								</outline>
							<outline text="if (isScalar (theOutline.opml.body)) { //8/6/17 by DW">
								<outline text="theOutline.opml.body = new Object ();"/>
								<outline text="}"/>
								</outline>
							<outline text="callback (undefined, theOutline);"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Wed, 30 Jun 2021 12:12:55 GMT"/>
					</outline>
				<outline text="function stringify (theOutline) { //returns the opmltext for the outline" created="Fri, 02 Jul 2021 15:17:20 GMT">
					<outline text="var opmltext = opmlToJs.opmlify (theOutline);" created="Thu, 17 Jun 2021 22:19:39 GMT"/>
					<outline text="return (opmltext);" created="Fri, 02 Jul 2021 15:19:13 GMT"/>
					<outline text="}" created="Fri, 02 Jul 2021 15:17:33 GMT"/>
					</outline>
				</outline>
			<outline text="" created="Fri, 02 Jul 2021 21:15:05 GMT"/>
			<outline text="examples/parsing/package.json" created="Wed, 30 Jun 2021 13:10:36 GMT">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;test&quot;,"/>
					<outline text="&quot;description&quot;: &quot;Test opml.parse and opml.stringify.&quot;," created="Fri, 02 Jul 2021 14:57:59 GMT"/>
					<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@scripting.com&gt;&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.4.2&quot;,"/>
					<outline text="&quot;license&quot;: &quot;MIT&quot;,"/>
					<outline text="&quot;main&quot;: &quot;test.js&quot;,"/>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;opml&quot;: &quot;*&quot;" created="Mon, 08 Mar 2021 15:15:44 GMT"/>
						<outline text="} "/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="examples/parsing/test.js" created="Wed, 30 Jun 2021 13:10:36 GMT">
				<outline text="Read and write an OPML file from a file." isComment="true" created="Sat, 03 Jul 2021 15:23:02 GMT">
					<outline text="Also display:" created="Sat, 03 Jul 2021 15:29:57 GMT">
						<outline text="the outline's title from the head section and " created="Sat, 03 Jul 2021 15:34:45 GMT"/>
						<outline text="the text of the third child of the second top level subhead of the United States." created="Sat, 03 Jul 2021 15:34:54 GMT"/>
						</outline>
					<outline text="Illustrates how you read data from the compiled structure." created="Sat, 03 Jul 2021 15:31:45 GMT"/>
					<outline text="The point is, once you've compiled the OPML, you process it as if it were read by JSON.parse." created="Sat, 03 Jul 2021 15:35:25 GMT"/>
					<outline text="And when you're done, you serialize it with opml.stringify. " created="Sat, 03 Jul 2021 15:35:47 GMT"/>
					<outline text="By design, works exactly like JSON, so every JS programmer should find this familiar. " created="Sat, 03 Jul 2021 15:36:02 GMT"/>
					<outline text="7/3/21; 11:36:22 AM by DW" created="Sat, 03 Jul 2021 15:36:19 GMT"/>
					</outline>
				<outline text="" created="Sat, 03 Jul 2021 15:23:53 GMT"/>
				<outline text="const fs = require (&quot;fs&quot;);"/>
				<outline text="const utils = require (&quot;daveutils&quot;);" isComment="true" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const opml = require (&quot;opml&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="" created="Wed, 30 Jun 2021 13:12:19 GMT"/>
				<outline text="fs.readFile (&quot;states.opml&quot;, function (err, opmltext) {" created="Wed, 30 Jun 2021 13:12:23 GMT">
					<outline text="if (err) {" created="Sat, 03 Jul 2021 14:56:50 GMT">
						<outline text="console.log (err.message);" created="Sat, 03 Jul 2021 14:56:52 GMT"/>
						<outline text="}" created="Sat, 03 Jul 2021 14:57:02 GMT"/>
						</outline>
					<outline text="else {" created="Sat, 03 Jul 2021 14:57:03 GMT">
						<outline text="opml.parse (opmltext, function (err, theOutline) { //convert OPML text into a JavaScript structure" created="Wed, 30 Jun 2021 13:16:34 GMT">
							<outline text="console.log (&quot;\nThe outline's title is \&quot;&quot; + theOutline.opml.head.title + &quot;.\&quot;&quot;); //see comment at top" created="Sat, 03 Jul 2021 15:30:30 GMT"/>
							<outline text="console.log (&quot;The third state in the Great Plains is: \&quot;&quot; + theOutline.opml.body.subs [0].subs [1].subs [2].text + &quot;.\&quot;&quot;);" created="Sat, 03 Jul 2021 15:30:30 GMT"/>
							<outline text="fs.writeFile (&quot;states.json&quot;, JSON.stringify (theOutline, undefined, 4), function (err) {" created="Sat, 03 Jul 2021 15:24:06 GMT">
								<outline text="if (err) {" created="Sat, 03 Jul 2021 15:24:43 GMT">
									<outline text="console.log (err.message);" created="Sat, 03 Jul 2021 15:24:45 GMT"/>
									<outline text="}" created="Sat, 03 Jul 2021 15:24:49 GMT"/>
									</outline>
								<outline text="else {" created="Sat, 03 Jul 2021 15:40:08 GMT">
									<outline text="console.log (&quot;states.json was saved.&quot;);" created="Sat, 03 Jul 2021 15:40:15 GMT"/>
									<outline text="}" created="Sat, 03 Jul 2021 15:40:30 GMT"/>
									</outline>
								<outline text="});" created="Sat, 03 Jul 2021 15:24:38 GMT"/>
								</outline>
							<outline text="fs.writeFile (&quot;statescopy.opml&quot;, opml.stringify (theOutline), function (err) {" created="Sat, 03 Jul 2021 15:24:06 GMT">
								<outline text="if (err) {" created="Sat, 03 Jul 2021 15:24:43 GMT">
									<outline text="console.log (err.message);" created="Sat, 03 Jul 2021 15:24:45 GMT"/>
									<outline text="}" created="Sat, 03 Jul 2021 15:24:49 GMT"/>
									</outline>
								<outline text="else {" created="Sat, 03 Jul 2021 15:40:08 GMT">
									<outline text="console.log (&quot;statescopy.opml was saved.&quot;);" created="Sat, 03 Jul 2021 15:40:15 GMT"/>
									<outline text="}" created="Sat, 03 Jul 2021 15:40:30 GMT"/>
									</outline>
								<outline text="});" created="Sat, 03 Jul 2021 15:24:38 GMT"/>
								</outline>
							<outline text="});" created="Wed, 30 Jun 2021 13:16:57 GMT"/>
							</outline>
						<outline text="}" created="Sat, 03 Jul 2021 14:57:05 GMT"/>
						</outline>
					<outline text="});" created="Wed, 30 Jun 2021 13:12:39 GMT"/>
					</outline>
				<outline text="" created="Wed, 30 Jun 2021 13:12:42 GMT"/>
				</outline>
			<outline text="" created="Fri, 02 Jul 2021 15:25:02 GMT"/>
			<outline text="client/opml.js" created="Fri, 02 Jul 2021 15:25:02 GMT">
				<outline text="function opmlParse (opmltext) {" created="Fri, 11 Jun 2021 11:58:09 GMT">
					<outline text="Changes" isComment="true" created="Sun, 13 Jun 2021 13:49:43 GMT">
						<outline text="6/13/21; 9:49:51 AM by DW" created="Sun, 13 Jun 2021 13:49:47 GMT">
							<outline text="Generate a JavaScript object from OPML text. " created="Sun, 13 Jun 2021 13:49:52 GMT"/>
							</outline>
						</outline>
					<outline text="var xstruct = xmlCompile (opmltext);"/>
					<outline text="var adrhead = xmlGetAddress (xstruct, &quot;head&quot;);" created="Thu, 10 Jun 2021 21:07:11 GMT"/>
					<outline text="var adrbody = xmlGetAddress (xstruct, &quot;body&quot;);" created="Fri, 11 Jun 2021 11:59:08 GMT"/>
					<outline text="var theObject = {" created="Fri, 11 Jun 2021 11:59:08 GMT">
						<outline text="opml: {" created="Fri, 11 Jun 2021 11:59:16 GMT">
							<outline text="head: xmlGetSubValues (adrhead)," created="Fri, 11 Jun 2021 11:59:20 GMT"/>
							<outline text="body: outlineToJson (adrbody)" created="Fri, 11 Jun 2021 11:59:37 GMT"/>
							<outline text="}" created="Fri, 11 Jun 2021 12:00:39 GMT"/>
							</outline>
						<outline text="}" created="Fri, 11 Jun 2021 12:00:40 GMT"/>
						</outline>
					<outline text="return (theObject);" created="Fri, 11 Jun 2021 11:59:08 GMT"/>
					<outline text="}" created="Fri, 11 Jun 2021 11:58:19 GMT"/>
					</outline>
				<outline text="function opmlStringify (theOutline) { //returns the opmltext for the outline -- 8/6/17 by DW">
					<outline text="var opmltext = &quot;&quot;, indentlevel = 0;"/>
					<outline text="function add (s) {">
						<outline text="opmltext += filledString (&quot;\t&quot;, indentlevel) + s + &quot;\n&quot;;" created="Wed, 19 Jun 2013 18:22:33 GMT" pgfnum="26661"/>
						<outline text="}"/>
						</outline>
					<outline text="function addSubs (subs) {">
						<outline text="if (subs !== undefined) {">
							<outline text="for (var i = 0; i &lt; subs.length; i++) {">
								<outline text="let sub = subs [i], atts = &quot;&quot;;"/>
								<outline text="for (var x in sub) {" created="Sat, 09 Aug 2014 15:39:38 GMT" pgfnum="43186">
									<outline text="if (x != &quot;subs&quot;) {">
										<outline text="atts += &quot; &quot; + x + &quot;=\&quot;&quot; + encodeXml (sub [x]) + &quot;\&quot;&quot;;" created="Sat, 09 Aug 2014 15:40:19 GMT" pgfnum="43192"/>
										<outline text="}"/>
										</outline>
									<outline text="}" created="Sat, 09 Aug 2014 15:39:43 GMT" pgfnum="43187"/>
									</outline>
								<outline text="if (sub.subs === undefined) {">
									<outline text="add (&quot;&lt;outline&quot; + atts + &quot; /&gt;&quot;);"/>
									<outline text="}"/>
									</outline>
								<outline text="else {">
									<outline text="add (&quot;&lt;outline&quot; + atts + &quot; &gt;&quot;); indentlevel++;"/>
									<outline text="addSubs (sub.subs);"/>
									<outline text="add (&quot;&lt;/outline&gt;&quot;); indentlevel--;"/>
									<outline text="}"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="add (&quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;ISO-8859-1\&quot;?&gt;&quot;);"/>
					<outline text="add (&quot;&lt;opml version=\&quot;2.0\&quot;&gt;&quot;); indentlevel++;"/>
					<outline text="//do head section">
						<outline text="add (&quot;&lt;head&gt;&quot;); indentlevel++;"/>
						<outline text="for (var x in theOutline.opml.head) {">
							<outline text="add (&quot;&lt;&quot; + x + &quot;&gt;&quot; + theOutline.opml.head [x] + &quot;&lt;/&quot; + x + &quot;&gt;&quot;);"/>
							<outline text="}"/>
							</outline>
						<outline text="add (&quot;&lt;/head&gt;&quot;); indentlevel--;"/>
						</outline>
					<outline text="//do body section">
						<outline text="add (&quot;&lt;body&gt;&quot;); indentlevel++;"/>
						<outline text="addSubs (theOutline.opml.body.subs);"/>
						<outline text="add (&quot;&lt;/body&gt;&quot;); indentlevel--;"/>
						</outline>
					<outline text="add (&quot;&lt;/opml&gt;&quot;); indentlevel--;"/>
					<outline text="console.log (&quot;opmlify: opmltext == \n&quot; + opmltext);" isComment="true"/>
					<outline text="return (opmltext);"/>
					<outline text="}"/>
					</outline>
				<outline text="function getOutlineHtml (theOutline) {" created="Thu, 10 Jun 2021 16:51:40 GMT">
					<outline text="var htmltext = &quot;&quot;; indentlevel = 0;" created="Thu, 10 Jun 2021 18:52:52 GMT"/>
					<outline text="function add (s) {" created="Thu, 10 Jun 2021 18:53:04 GMT">
						<outline text="htmltext += filledString (&quot;\t&quot;, indentlevel) + s + &quot;\n&quot;;" created="Thu, 10 Jun 2021 18:57:55 GMT"/>
						<outline text="}" created="Thu, 10 Jun 2021 18:57:50 GMT"/>
						</outline>
					<outline text="function addSubsHtml (node) {" created="Thu, 10 Jun 2021 18:52:07 GMT">
						<outline text="add (&quot;&lt;ul&gt;&quot;); indentlevel++;" created="Thu, 10 Jun 2021 18:54:17 GMT"/>
						<outline text="node.subs.forEach (function (sub) {" created="Thu, 10 Jun 2021 18:54:17 GMT">
							<outline text="add (&quot;&lt;li&gt;&quot; + sub.text + &quot;&lt;/li&gt;&quot;);" created="Thu, 10 Jun 2021 18:54:46 GMT"/>
							<outline text="if (sub.subs !== undefined) {" created="Thu, 10 Jun 2021 18:55:12 GMT">
								<outline text="addSubsHtml (sub);" created="Thu, 10 Jun 2021 18:55:37 GMT"/>
								<outline text="}" created="Thu, 10 Jun 2021 18:55:21 GMT"/>
								</outline>
							<outline text="});" created="Thu, 10 Jun 2021 18:54:26 GMT"/>
							</outline>
						<outline text="add (&quot;&lt;/ul&gt;&quot;); indentlevel--;" created="Thu, 10 Jun 2021 18:54:17 GMT"/>
						<outline text="}" created="Thu, 10 Jun 2021 18:52:23 GMT"/>
						</outline>
					<outline text="addSubsHtml (theOutline.opml.body);"/>
					<outline text="return (htmltext);" created="Thu, 10 Jun 2021 16:58:17 GMT"/>
					<outline text="}" created="Thu, 10 Jun 2021 16:51:51 GMT"/>
					</outline>
				</outline>
			<outline text="client/styles.css" created="Fri, 02 Jul 2021 15:25:32 GMT">
				<outline text="body {">
					<outline text="font-family: Ubuntu;"/>
					<outline text="font-size: 18px;"/>
					<outline text="background-color: whitesmoke;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divPageBody {">
					<outline text="width: 60%;"/>
					<outline text="margin-top: 50px;"/>
					<outline text="margin-left: auto;"/>
					<outline text="margin-right: auto;"/>
					<outline text="margin-bottom: 400px;" created="Fri, 11 Jun 2021 12:29:37 GMT"/>
					<outline text="}"/>
					</outline>
				<outline text="p {" created="Thu, 10 Jun 2021 12:24:39 GMT">
					<outline text="line-height: 140%;" created="Thu, 10 Jun 2021 12:24:43 GMT"/>
					<outline text="}" created="Thu, 10 Jun 2021 12:24:52 GMT"/>
					</outline>
				<outline text="" created="Sun, 13 Jun 2021 14:05:23 GMT"/>
				<outline text=".divOutlineViewer {" created="Thu, 10 Jun 2021 20:59:42 GMT">
					<outline text="margin-top: 15px;" created="Thu, 10 Jun 2021 12:59:54 GMT"/>
					<outline text="padding: 3px;" created="Thu, 10 Jun 2021 12:54:13 GMT"/>
					<outline text="border: 1px solid silver;" created="Thu, 10 Jun 2021 12:34:30 GMT"/>
					<outline text="font-size: 16px;" created="Thu, 10 Jun 2021 21:02:08 GMT"/>
					<outline text="}" created="Thu, 10 Jun 2021 20:59:45 GMT"/>
					</outline>
				<outline text=".divOutlineViewer ul {" created="Thu, 10 Jun 2021 20:59:42 GMT">
					<outline text="list-style-type: circle;" created="Thu, 10 Jun 2021 21:04:33 GMT"/>
					<outline text="}" created="Thu, 10 Jun 2021 20:59:45 GMT"/>
					</outline>
				<outline text=".divOutlineViewer li {" created="Thu, 10 Jun 2021 20:59:42 GMT">
					<outline text="padding-top: 3px;" created="Thu, 10 Jun 2021 12:54:13 GMT"/>
					<outline text="padding-bottom: 3px;" created="Thu, 10 Jun 2021 12:54:13 GMT"/>
					<outline text="}" created="Thu, 10 Jun 2021 20:59:45 GMT"/>
					</outline>
				<outline text="" created="Fri, 11 Jun 2021 12:10:22 GMT"/>
				<outline text=".divHeadElementsViewer {" created="Fri, 11 Jun 2021 12:10:22 GMT">
					<outline text="margin-top: 15px;" created="Thu, 10 Jun 2021 12:59:54 GMT"/>
					<outline text="border: 1px solid silver;" created="Thu, 10 Jun 2021 12:34:30 GMT"/>
					<outline text="font-size: 16px;" created="Thu, 10 Jun 2021 21:02:08 GMT"/>
					<outline text="}" created="Fri, 11 Jun 2021 12:10:27 GMT"/>
					</outline>
				<outline text=".divHeadElementsViewer td {" created="Fri, 11 Jun 2021 12:11:54 GMT">
					<outline text="vertical-align: top;" created="Fri, 11 Jun 2021 12:12:06 GMT"/>
					<outline text="padding: 3px;" created="Fri, 11 Jun 2021 12:15:46 GMT"/>
					<outline text="font-size: 16px;" created="Thu, 10 Jun 2021 21:02:08 GMT"/>
					<outline text="}" created="Fri, 11 Jun 2021 12:12:12 GMT"/>
					</outline>
				<outline text=".divHeadElementsViewer .tdright {" created="Fri, 11 Jun 2021 12:11:54 GMT">
					<outline text="text-align: right;" created="Fri, 11 Jun 2021 12:12:06 GMT"/>
					<outline text="}" created="Fri, 11 Jun 2021 12:12:12 GMT"/>
					</outline>
				</outline>
			<outline text="client/code.js" created="Fri, 02 Jul 2021 15:25:27 GMT">
				<outline text="const urlOpmlFile = &quot;http://drummer.scripting.com/davewiner/states.opml&quot;;" created="Fri, 02 Jul 2021 20:51:47 GMT"/>
				<outline text="" created="Fri, 02 Jul 2021 20:51:45 GMT"/>
				<outline text="function startup () {" created="Fri, 02 Jul 2021 15:25:31 GMT">
					<outline text="console.log (&quot;startup&quot;);" created="Fri, 02 Jul 2021 20:50:44 GMT"/>
					<outline text="readHttpFile (urlOpmlFile, function (opmltext) {">
						<outline text="if (opmltext !== undefined) {" created="Fri, 02 Jul 2021 20:57:28 GMT">
							<outline text="var theOutline = opmlParse (opmltext);" created="Fri, 02 Jul 2021 20:57:53 GMT"/>
							<outline text="var htmltext = getOutlineHtml (theOutline);" created="Fri, 02 Jul 2021 21:02:23 GMT"/>
							<outline text="$(&quot;#idOutlineViewer&quot;).html (htmltext);" created="Fri, 02 Jul 2021 21:01:28 GMT"/>
							<outline text="" created="Fri, 02 Jul 2021 21:11:58 GMT"/>
							<outline text="var xmltext = opmlStringify (theOutline);" created="Fri, 02 Jul 2021 21:11:59 GMT"/>
							<outline text="xmltext = replaceAll (xmltext, &quot;&lt;&quot;, &quot;&amp;lt;&quot;);" created="Fri, 02 Jul 2021 21:12:09 GMT"/>
							<outline text="$(&quot;#idOpmlViewer&quot;).html (xmltext);" created="Fri, 02 Jul 2021 21:01:28 GMT"/>
							<outline text="" created="Fri, 02 Jul 2021 21:12:52 GMT"/>
							<outline text="console.log (jsonStringify (theOutline));" isComment="true" created="Fri, 02 Jul 2021 20:58:07 GMT"/>
							<outline text="}" created="Fri, 02 Jul 2021 20:57:39 GMT"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Fri, 02 Jul 2021 20:50:43 GMT"/>
					</outline>
				</outline>
			<outline text="client/index.html" created="Fri, 02 Jul 2021 15:26:18 GMT">
				<outline text="&lt;html&gt;">
					<outline text="&lt;head&gt;">
						<outline text="&lt;title&gt;OPML client demo&lt;/title&gt;"/>
						<outline text="&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;"/>
						<outline text="&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;"/>
						<outline text="&lt;%basicIncludes2%&gt;"/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/shared/xml.js&quot;&gt;&lt;/script&gt;" created="Thu, 08 May 2014 14:04:18 GMT" pgfnum="41269"/>
						<outline text="&lt;script src=&quot;opml.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;script src=&quot;code.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;link rel=&quot;stylesheet&quot; href=&quot;styles.css&quot; type=&quot;text/css&quot;&gt;"/>
						<outline text="&lt;/head&gt;"/>
						</outline>
					<outline text="&lt;body&gt;">
						<outline text="&lt;div class=&quot;divPageBody&quot;&gt;">
							<outline text="&lt;pre id=&quot;idOpmlViewer&quot;&gt;" created="Fri, 02 Jul 2021 21:09:53 GMT">
								<outline text="&lt;/pre&gt;" created="Fri, 02 Jul 2021 21:09:59 GMT"/>
								</outline>
							<outline text="&lt;div class=&quot;divOutlineViewer&quot; id=&quot;idOutlineViewer&quot;&gt;" created="Fri, 02 Jul 2021 21:02:41 GMT">
								<outline text="&lt;/div&gt;" created="Fri, 02 Jul 2021 21:02:45 GMT"/>
								</outline>
							<outline text="&lt;/div&gt;"/>
							</outline>
						<outline text="&lt;script&gt;">
							<outline text="$(document).ready (function () {">
								<outline text="startup ();" created="Wed, 30 Oct 2013 15:20:06 GMT" pgfnum="30656"/>
								<outline text="});"/>
								</outline>
							<outline text="&lt;/script&gt;"/>
							</outline>
						<outline text="&lt;/body&gt;"/>
						</outline>
					<outline text="&lt;/html&gt;"/>
					</outline>
				</outline>
			<outline text="client/readme.md" created="Fri, 02 Jul 2021 15:26:23 GMT">
				<outline text="# Browser-based OPML" created="Fri, 02 Jul 2021 15:26:28 GMT">
					<outline text="JavaScript code for parsing and stringifying OPML structures, subscribing to outlines via websockets, displaying an outline in the browse."/>
					</outline>
				<outline text=""/>
				<outline text="The core code for the browser version is opml.js."/>
				<outline text="It uses routines in several of my libraries:">
					<outline text="* utils.js"/>
					<outline text="* xml.js"/>
					</outline>
				<outline text="It also uses jQuery."/>
				<outline text="The demo app, in index.html and its two included files, code.js and styles.css, does something which I will explain here."/>
				<outline text="You can run the test app from scripting.com."/>
				</outline>
			<outline text="" created="Fri, 02 Jul 2021 21:15:09 GMT"/>
			<outline text="readme.md" created="Fri, 02 Jul 2021 14:57:47 GMT">
				<outline text="# opmlPackage" created="Fri, 02 Jul 2021 14:57:50 GMT">
					<outline text="Node and browser-based code that helps developers support OPML in outliners, processors and renderers." created="Fri, 02 Jul 2021 15:04:01 GMT"/>
					</outline>
				<outline text="### Using the Node package" created="Sat, 03 Jul 2021 14:54:55 GMT">
					<outline text="To parse a local OPML file:" created="Sat, 03 Jul 2021 14:55:19 GMT">
						<outline text="```" created="Sat, 03 Jul 2021 15:53:29 GMT"/>
						<outline text="const fs = require (&quot;fs&quot;);"/>
						<outline text="const opml = require (&quot;opml&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
						<outline text="fs.readFile (&quot;states.opml&quot;, function (err, opmltext) {" created="Wed, 30 Jun 2021 13:12:23 GMT">
							<outline text="if (err) {" created="Sat, 03 Jul 2021 14:56:50 GMT">
								<outline text="console.log (err.message);" created="Sat, 03 Jul 2021 14:56:52 GMT"/>
								<outline text="}" created="Sat, 03 Jul 2021 14:57:02 GMT"/>
								</outline>
							<outline text="else {" created="Sat, 03 Jul 2021 14:57:03 GMT">
								<outline text="opml.parse (opmltext, function (err, theOutline) {" created="Wed, 30 Jun 2021 13:16:34 GMT">
									<outline text="console.log (JSON.stringify (theOutline, undefined, 4));" created="Wed, 30 Jun 2021 13:20:06 GMT"/>
									<outline text="});" created="Wed, 30 Jun 2021 13:16:57 GMT"/>
									</outline>
								<outline text="}" created="Sat, 03 Jul 2021 14:57:05 GMT"/>
								</outline>
							<outline text="});" created="Wed, 30 Jun 2021 13:12:39 GMT"/>
							</outline>
						<outline text="```" created="Sat, 03 Jul 2021 15:53:36 GMT"/>
						</outline>
					</outline>
				<outline text="### Using the client code" created="Sat, 03 Jul 2021 15:43:59 GMT">
					<outline text="" created="Sat, 03 Jul 2021 15:44:08 GMT"/>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Fri, 02 Jul 2021 14:50:21 GMT">
			<outline text="nodeEditorSuite.utilities.buildOpmlPackage ();" created="Fri, 02 Jul 2021 14:50:25 GMT"/>
			</outline>
		</body>
	</opml>
